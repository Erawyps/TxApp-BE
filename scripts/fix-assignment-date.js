import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function fixAssignmentDate() {
  try {
    console.log('üîß Correction de la date d\'assignation...');

    // Trouver Fran√ßois-Jos√© Dubois
    const dubois = await prisma.utilisateur.findFirst({
      where: {
        nom: 'Dubois',
        prenom: 'Fran√ßois-Jos√©'
      },
      include: {
        chauffeur: true
      }
    });

    if (!dubois?.chauffeur) {
      console.log('‚ùå Chauffeur non trouv√©');
      return;
    }

    // Trouver le v√©hicule
    const vehicle = await prisma.vehicule.findFirst({
      where: {
        plaque_immatriculation: '1-ABC-123'
      }
    });

    if (!vehicle) {
      console.log('‚ùå V√©hicule non trouv√©');
      return;
    }

    // Mettre √† jour la date d'assignation pour refl√©ter la premi√®re utilisation
    await prisma.$executeRaw`
      UPDATE chauffeur_vehicule
      SET date_assignation = '2025-09-05'::date
      WHERE chauffeur_id = ${dubois.chauffeur.id} AND vehicule_id = ${vehicle.id}
    `;

    console.log('‚úÖ Date d\'assignation corrig√©e: 2025-09-05');

    // V√©rifier le r√©sultat
    const updated = await prisma.$queryRaw`
      SELECT date_assignation FROM chauffeur_vehicule
      WHERE chauffeur_id = ${dubois.chauffeur.id} AND vehicule_id = ${vehicle.id}
    `;

    console.log(`üìÖ Nouvelle date d'assignation: ${updated[0].date_assignation.toISOString().split('T')[0]}`);

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixAssignmentDate();