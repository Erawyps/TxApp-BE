import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function addDuboisVehicle() {
  try {
    console.log('üöó Ajout du v√©hicule de Fran√ßois-Jos√© Dubois...');

    // Trouver Fran√ßois-Jos√© Dubois
    const dubois = await prisma.utilisateur.findFirst({
      where: {
        nom: 'Dubois',
        prenom: 'Fran√ßois-Jos√©'
      },
      include: {
        chauffeur: true
      }
    });

    if (!dubois || !dubois.chauffeur) {
      console.log('‚ùå Fran√ßois-Jos√© Dubois ou son profil chauffeur non trouv√©');
      return;
    }

    // Trouver le v√©hicule 1-ABC-123
    const vehicle = await prisma.vehicule.findFirst({
      where: {
        plaque_immatriculation: '1-ABC-123'
      }
    });

    if (!vehicle) {
      console.log('‚ùå V√©hicule 1-ABC-123 non trouv√©');
      return;
    }

    // Ajouter la relation chauffeur-v√©hicule
    const result = await prisma.$executeRaw`
      INSERT INTO chauffeur_vehicule (chauffeur_id, vehicule_id, actif, notes, created_at, updated_at)
      VALUES (${dubois.chauffeur.id}, ${vehicle.id}, true, 'V√©hicule principal de Fran√ßois-Jos√© Dubois', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
      ON CONFLICT (chauffeur_id, vehicule_id) DO NOTHING;
    `;

    if (result > 0) {
      console.log(`‚úÖ V√©hicule ajout√©: ${dubois.prenom} ${dubois.nom} ‚Üî ${vehicle.plaque_immatriculation} (${vehicle.marque} ${vehicle.modele})`);
    } else {
      console.log(`‚è≠Ô∏è Relation existe d√©j√†: ${dubois.prenom} ${dubois.nom} ‚Üî ${vehicle.plaque_immatriculation}`);
    }

    // V√©rifier le r√©sultat final
    const finalVehicles = await prisma.$queryRaw`
      SELECT
        v.plaque_immatriculation,
        v.marque,
        v.modele,
        cv.actif,
        cv.date_assignation
      FROM chauffeur_vehicule cv
      JOIN chauffeur c ON cv.chauffeur_id = c.id
      JOIN utilisateur u ON c.utilisateur_id = u.id
      JOIN vehicule v ON cv.vehicule_id = v.id
      WHERE u.nom = 'Dubois' AND u.prenom = 'Fran√ßois-Jos√©' AND cv.actif = true
      ORDER BY v.plaque_immatriculation;
    `;

    console.log(`\nüéØ V√©hicules finaux assign√©s √† Fran√ßois-Jos√© Dubois:`);
    if (finalVehicles.length > 0) {
      finalVehicles.forEach(vehicle => {
        console.log(`- ${vehicle.plaque_immatriculation} (${vehicle.marque} ${vehicle.modele})`);
      });
    } else {
      console.log('Aucun v√©hicule assign√©');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addDuboisVehicle();