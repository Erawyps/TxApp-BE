// Script de v√©rification de production pour le dashboard
// √Ä ex√©cuter avant le d√©ploiement pour s'assurer que tout fonctionne

const API_BASE = 'https://api.txapp.be/api';

async function checkProductionReadiness() {
  console.log('üîç V√©rification de la production du dashboard...\n');

  try {
    // Test 1: V√©rifier la sant√© de l'API
    console.log('1. Test de la sant√© de l\'API...');
    const healthResponse = await fetch(`${API_BASE.replace('/api', '')}/health`);
    if (!healthResponse.ok) throw new Error('API health check failed');
    console.log('‚úÖ API op√©rationnelle\n');

    // Test 2: V√©rifier les statistiques des courses
    console.log('2. Test des statistiques des courses...');
    const statsResponse = await fetch(`${API_BASE}/dashboard/courses/stats`);
    if (!statsResponse.ok) throw new Error('Stats API failed');

    const stats = await statsResponse.json();
    console.log('üìä Statistiques r√©cup√©r√©es:');
    console.log(`   - Courses totales: ${stats.totalCourses}`);
    console.log(`   - Revenus totaux: ${stats.totalRevenue}‚Ç¨`);
    console.log(`   - Distance totale: ${stats.totalDistance}km`);
    console.log(`   - Chauffeurs actifs: ${stats.chauffeursActifs}`);
    console.log(`   - V√©hicules utilis√©s: ${stats.vehiculesUtilises}`);
    console.log(`   - Revenu moyen/course: ${stats.averageEarningsPerTrip}‚Ç¨`);
    console.log(`   - Distance moyenne/course: ${stats.averageDistancePerTrip}km`);

    if (stats.averageEarningsPerTrip > 0 && stats.averageDistancePerTrip > 0) {
      console.log('‚úÖ Moyennes correctement calcul√©es\n');
    } else {
      console.log('‚ùå Probl√®me avec les moyennes\n');
    }

    // Test 3: V√©rifier les donn√©es des graphiques
    console.log('3. Test des donn√©es de graphiques...');
    const chartResponse = await fetch(`${API_BASE}/dashboard/courses/chart-data?type=daily-revenue`);
    if (!chartResponse.ok) throw new Error('Chart data API failed');

    const chartData = await chartResponse.json();
    console.log(`üìà Donn√©es de graphique r√©cup√©r√©es: ${chartData.data.length} points`);
    console.log('‚úÖ Graphiques op√©rationnels\n');

    // Test 4: V√©rifier le format des donn√©es
    console.log('4. Validation du format des donn√©es...');
    const sampleData = chartData.data[0];
    if (sampleData && sampleData.date && typeof sampleData.revenue === 'number') {
      console.log('‚úÖ Format des donn√©es correct\n');
    } else {
      console.log('‚ùå Format des donn√©es incorrect\n');
    }

    console.log('üéâ Dashboard pr√™t pour la production !');

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.message);
    process.exit(1);
  }
}

// Ex√©cuter la v√©rification
checkProductionReadiness();